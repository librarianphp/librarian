#!/usr/bin/env php
<?php

if (php_sapi_name() !== 'cli') {
    exit;
}

require __DIR__ . '/vendor/autoload.php';

use Minicli\Exception\CommandNotFoundException;
use Minicli\App;

$app = new App(load_config());
$app->setSignature('
 _      ____  ____   ____    ____  ____   ____   ____  ____  
| |    |    ||    \ |    \  /    ||    \ |    | /    ||    \ 
| |     |  | |  o  )|  D  )|  o  ||  D  ) |  | |  o  ||  _  |
| |___  |  | |     ||    / |     ||    /  |  | |     ||  |  |
|     | |  | |  O  ||    \ |  _  ||    \  |  | |  _  ||  |  |
|     | |  | |     ||  .  \|  |  ||  .  \ |  | |  |  ||  |  |
|_____||____||_____||__|\_||__|__||__|\_||____||__|__||__|__|

Type "./librarian help" for help with available commands.
');

// register services
$services = include __DIR__ . '/services.php';
foreach ($services as $serviceName => $service) {
    $app->addService($serviceName, $service);
}

$app->librarian->boot();

try {
    $app->runCommand($argv);
} catch (CommandNotFoundException $notFoundException) {
    if ($app->config->debug) {
        $app->error("Command Not Found.");
    }
    return 1;
} catch (Throwable | Exception $exception) {
    if ($app->config->debug) {
        $app->error("An error occurred:");
        $app->error($exception->getMessage());
    }
    return 1;
}

return 0;
